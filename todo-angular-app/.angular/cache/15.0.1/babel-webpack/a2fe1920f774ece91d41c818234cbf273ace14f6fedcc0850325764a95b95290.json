{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TodosComponent = class TodosComponent {\n  constructor() {\n    this.todos = [];\n  }\n  ngOnInit() {\n    this.todos = [{\n      content: 'First Todo',\n      completed: false\n    }, {\n      content: 'Second Todo',\n      completed: false\n    }];\n  }\n  toggleDone(id) {\n    this.todos.map((v, i) => {\n      if (i == id) v.completed = !v.completed;\n      return v;\n    });\n  }\n};\nTodosComponent = __decorate([Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})], TodosComponent);\nexport { TodosComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAG1BC;IAFA,UAAK,GAAU,EAAE;EAED;EACjBC,QAAQ;IACJ,IAAI,CAACC,KAAK,GAAG,CAAC;MACZC,OAAO,EAAE,YAAY;MACrBC,SAAS,EAAE;KACZ,EACF;MACGD,OAAO,EAAE,aAAa;MACtBC,SAAS,EAAE;KACZ,CACF;EACH;EAEAC,UAAU,CAAEC,EAAE;IACZ,IAAI,CAACJ,KAAK,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;MACtB,IAAIA,CAAC,IAAIH,EAAE,EAAEE,CAAC,CAACJ,SAAS,GAAG,CAACI,CAAC,CAACJ,SAAS;MACvC,OAAOI,CAAC;IACV,CAAC,CAAE;EACL;CAGC;AAxBYT,cAAc,eAL1BD,SAAS,CAAC;EACTY,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWb,cAAc,CAwB1B;SAxBYA,cAAc","names":["Component","TodosComponent","constructor","ngOnInit","todos","content","completed","toggleDone","id","map","v","i","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/jonathanharris/Desktop/code/PersonalProjects/ToDoAngular/todo-angular-app/src/app/components/todos/todos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Todo } from 'src/app/models/ToDo';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent implements OnInit {\n todos:Todo[] = [];\n\n constructor () {}\nngOnInit(): void {\n    this.todos = [{\n      content: 'First Todo',\n      completed: false\n    },\n   {\n      content: 'Second Todo',\n      completed: false\n    }\n  ]\n}\n\ntoggleDone (id) {\n  this.todos.map((v, i) => {\n    if (i == id) v.completed = !v.completed;\n    return v;\n  } )\n}\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}